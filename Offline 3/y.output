Terminals unused in grammar

    DO
    CHAR
    CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: %empty

   10 $@2: %empty

   11 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement $@2

   12 $@3: %empty

   13 $@4: %empty

   14 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement $@4

   15 parameter_list: parameter_list COMMA type_specifier ID
   16               | parameter_list COMMA type_specifier
   17               | type_specifier ID
   18               | type_specifier

   19 compound_statement: LCURL statements RCURL
   20                   | LCURL RCURL

   21 var_declaration: type_specifier declaration_list SEMICOLON

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 declaration_list: declaration_list COMMA ID
   26                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   27                 | ID
   28                 | ID LTHIRD CONST_INT RTHIRD

   29 statements: statement
   30           | statements statement

   31 statement: var_declaration
   32          | expression_statement

   33 $@5: %empty

   34 $@6: %empty

   35 statement: $@5 compound_statement $@6
   36          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement
   38          | IF LPAREN expression RPAREN statement ELSE statement
   39          | WHILE LPAREN expression RPAREN statement
   40          | PRINTLN LPAREN ID RPAREN SEMICOLON
   41          | RETURN expression SEMICOLON

   42 expression_statement: SEMICOLON
   43                     | expression SEMICOLON

   44 variable: ID
   45         | ID LTHIRD expression RTHIRD

   46 expression: logic_expression
   47           | variable ASSIGNOP logic_expression

   48 logic_expression: rel_expression
   49                 | rel_expression LOGICOP rel_expression

   50 rel_expression: simple_expression
   51               | simple_expression RELOP simple_expression

   52 simple_expression: term
   53                  | simple_expression ADDOP term

   54 term: unary_expression
   55     | term MULOP unary_expression

   56 unary_expression: ADDOP unary_expression
   57                 | NOT unary_expression
   58                 | factor

   59 factor: variable
   60       | ID LPAREN argument_list RPAREN
   61       | LPAREN expression RPAREN
   62       | CONST_INT
   63       | CONST_FLOAT
   64       | variable INCOP
   65       | variable DECOP

   66 argument_list: arguments
   67              | %empty

   68 arguments: arguments COMMA logic_expression
   69          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF <symbol> (258) 37 38
    ELSE <symbol> (259) 38
    FOR <symbol> (260) 36
    WHILE <symbol> (261) 39
    DO <symbol> (262)
    INT <symbol> (263) 22
    CHAR <symbol> (264)
    FLOAT <symbol> (265) 23
    VOID <symbol> (266) 24
    RETURN <symbol> (267) 41
    CONTINUE <symbol> (268)
    NOT <symbol> (269) 57
    LPAREN <symbol> (270) 7 8 11 14 36 37 38 39 40 60 61
    RPAREN <symbol> (271) 7 8 11 14 36 37 38 39 40 60 61
    LCURL <symbol> (272) 19 20
    RCURL <symbol> (273) 19 20
    LTHIRD <symbol> (274) 26 28 45
    RTHIRD <symbol> (275) 26 28 45
    PRINTLN <symbol> (276) 40
    COMMA <symbol> (277) 15 16 25 26 68
    SEMICOLON <symbol> (278) 7 8 21 40 41 42 43
    ADDOP <symbol> (279) 53 56
    MULOP <symbol> (280) 55
    INCOP <symbol> (281) 64
    DECOP <symbol> (282) 65
    LOGICOP <symbol> (283) 49
    RELOP <symbol> (284) 51
    ASSIGNOP <symbol> (285) 47
    ID <symbol> (286) 7 8 11 14 15 17 25 26 27 28 40 44 45 60
    CONST_INT <symbol> (287) 26 28 62
    CONST_FLOAT <symbol> (288) 63
    LOWER_THAN_ELSE (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    start (36)
        on left: 1
        on right: 0
    program <vectorsymbol> (37)
        on left: 2 3
        on right: 1 2
    unit <vectorsymbol> (38)
        on left: 4 5 6
        on right: 2 3
    func_declaration <vectorsymbol> (39)
        on left: 7 8
        on right: 5
    func_definition <vectorsymbol> (40)
        on left: 11 14
        on right: 6
    $@1 (41)
        on left: 9
        on right: 11
    $@2 (42)
        on left: 10
        on right: 11
    $@3 (43)
        on left: 12
        on right: 14
    $@4 (44)
        on left: 13
        on right: 14
    parameter_list <vectorsymbol> (45)
        on left: 15 16 17 18
        on right: 7 11 15 16
    compound_statement <vectorsymbol> (46)
        on left: 19 20
        on right: 11 14 35
    var_declaration <vectorsymbol> (47)
        on left: 21
        on right: 4 31
    type_specifier <symbol> (48)
        on left: 22 23 24
        on right: 7 8 11 14 15 16 17 18 21
    declaration_list <vectorsymbol> (49)
        on left: 25 26 27 28
        on right: 21 25 26
    statements <vectorsymbol> (50)
        on left: 29 30
        on right: 19 30
    statement <vectorsymbol> (51)
        on left: 31 32 35 36 37 38 39 40 41
        on right: 29 30 36 37 38 39
    $@5 (52)
        on left: 33
        on right: 35
    $@6 (53)
        on left: 34
        on right: 35
    expression_statement <vectorsymbol> (54)
        on left: 42 43
        on right: 32 36
    variable <vectorsymbol> (55)
        on left: 44 45
        on right: 47 59 64 65
    expression <vectorsymbol> (56)
        on left: 46 47
        on right: 36 37 38 39 41 43 45 61
    logic_expression <vectorsymbol> (57)
        on left: 48 49
        on right: 46 47 68 69
    rel_expression <vectorsymbol> (58)
        on left: 50 51
        on right: 48 49
    simple_expression <vectorsymbol> (59)
        on left: 52 53
        on right: 50 51 53
    term <vectorsymbol> (60)
        on left: 54 55
        on right: 52 53 55
    unary_expression <vectorsymbol> (61)
        on left: 56 57 58
        on right: 54 55 56 57
    factor <vectorsymbol> (62)
        on left: 59 60 61 62 63 64 65
        on right: 58
    argument_list <vectorsymbol> (63)
        on left: 66 67
        on right: 60
    arguments <vectorsymbol> (64)
        on left: 68 69
        on right: 66 68


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   22 type_specifier: INT .

    $default  reduce using rule 22 (type_specifier)


State 2

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: VOID .

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   11 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement $@2
   14                | type_specifier . ID LPAREN RPAREN $@3 compound_statement $@4
   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   11 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement $@2
   14                | type_specifier ID . LPAREN RPAREN $@3 compound_statement $@4
   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 14

   21 var_declaration: type_specifier declaration_list . SEMICOLON
   25 declaration_list: declaration_list . COMMA ID
   26                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   11 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement $@2
   14                | type_specifier ID LPAREN . RPAREN $@3 compound_statement $@4

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 19

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   28 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   25 declaration_list: declaration_list COMMA . ID
   26                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 18

   21 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 21 (var_declaration)


State 19

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   14 func_definition: type_specifier ID LPAREN RPAREN . $@3 compound_statement $@4

    SEMICOLON  shift, and go to state 24

    $default  reduce using rule 12 ($@3)

    $@3  go to state 25


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   11 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement $@2
   15 parameter_list: parameter_list . COMMA type_specifier ID
   16               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 21

   17 parameter_list: type_specifier . ID
   18               | type_specifier .

    ID  shift, and go to state 28

    $default  reduce using rule 18 (parameter_list)


State 22

   28 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 29


State 23

   25 declaration_list: declaration_list COMMA ID .
   26                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 30

    $default  reduce using rule 25 (declaration_list)


State 24

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 25

   14 func_definition: type_specifier ID LPAREN RPAREN $@3 . compound_statement $@4

    LCURL  shift, and go to state 31

    compound_statement  go to state 32


State 26

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   11 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement $@2

    SEMICOLON  shift, and go to state 33

    $default  reduce using rule 9 ($@1)

    $@1  go to state 34


State 27

   15 parameter_list: parameter_list COMMA . type_specifier ID
   16               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 35


State 28

   17 parameter_list: type_specifier ID .

    $default  reduce using rule 17 (parameter_list)


State 29

   28 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 28 (declaration_list)


State 30

   26 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 36


State 31

   19 compound_statement: LCURL . statements RCURL
   20                   | LCURL . RCURL

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    RCURL        shift, and go to state 43
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statements            go to state 52
    statement             go to state 53
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 32

   14 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement . $@4

    $default  reduce using rule 13 ($@4)

    $@4  go to state 64


State 33

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 34

   11 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement $@2

    LCURL  shift, and go to state 31

    compound_statement  go to state 65


State 35

   15 parameter_list: parameter_list COMMA type_specifier . ID
   16               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 66

    $default  reduce using rule 16 (parameter_list)


State 36

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 67


State 37

   37 statement: IF . LPAREN expression RPAREN statement
   38          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 68


State 38

   36 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 69


State 39

   39 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 70


State 40

   41 statement: RETURN . expression SEMICOLON

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 71
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 41

   57 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable          go to state 72
    unary_expression  go to state 73
    factor            go to state 63


State 42

   61 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 74
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 43

   20 compound_statement: LCURL RCURL .

    $default  reduce using rule 20 (compound_statement)


State 44

   40 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 75


State 45

   42 expression_statement: SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 46

   56 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable          go to state 72
    unary_expression  go to state 76
    factor            go to state 63


State 47

   44 variable: ID .
   45         | ID . LTHIRD expression RTHIRD
   60 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 77
    LTHIRD  shift, and go to state 78

    $default  reduce using rule 44 (variable)


State 48

   62 factor: CONST_INT .

    $default  reduce using rule 62 (factor)


State 49

   63 factor: CONST_FLOAT .

    $default  reduce using rule 63 (factor)


State 50

   31 statement: var_declaration .

    $default  reduce using rule 31 (statement)


State 51

   21 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 79

    declaration_list  go to state 14


State 52

   19 compound_statement: LCURL statements . RCURL
   30 statements: statements . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    RCURL        shift, and go to state 80
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statement             go to state 81
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 53

   29 statements: statement .

    $default  reduce using rule 29 (statements)


State 54

   35 statement: $@5 . compound_statement $@6

    LCURL  shift, and go to state 31

    compound_statement  go to state 82


State 55

   32 statement: expression_statement .

    $default  reduce using rule 32 (statement)


State 56

   47 expression: variable . ASSIGNOP logic_expression
   59 factor: variable .
   64       | variable . INCOP
   65       | variable . DECOP

    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84
    ASSIGNOP  shift, and go to state 85

    $default  reduce using rule 59 (factor)


State 57

   43 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 58

   46 expression: logic_expression .

    $default  reduce using rule 46 (expression)


State 59

   48 logic_expression: rel_expression .
   49                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 87

    $default  reduce using rule 48 (logic_expression)


State 60

   50 rel_expression: simple_expression .
   51               | simple_expression . RELOP simple_expression
   53 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88
    RELOP  shift, and go to state 89

    $default  reduce using rule 50 (rel_expression)


State 61

   52 simple_expression: term .
   55 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 52 (simple_expression)


State 62

   54 term: unary_expression .

    $default  reduce using rule 54 (term)


State 63

   58 unary_expression: factor .

    $default  reduce using rule 58 (unary_expression)


State 64

   14 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement $@4 .

    $default  reduce using rule 14 (func_definition)


State 65

   11 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement . $@2

    $default  reduce using rule 10 ($@2)

    $@2  go to state 91


State 66

   15 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 67

   26 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 68

   37 statement: IF LPAREN . expression RPAREN statement
   38          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 92
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 69

   36 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    expression_statement  go to state 93
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 70

   39 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 94
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 71

   41 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 95


State 72

   59 factor: variable .
   64       | variable . INCOP
   65       | variable . DECOP

    INCOP  shift, and go to state 83
    DECOP  shift, and go to state 84

    $default  reduce using rule 59 (factor)


State 73

   57 unary_expression: NOT unary_expression .

    $default  reduce using rule 57 (unary_expression)


State 74

   61 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 96


State 75

   40 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 97


State 76

   56 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 77

   60 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 67 (argument_list)

    variable           go to state 72
    logic_expression   go to state 98
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63
    argument_list      go to state 99
    arguments          go to state 100


State 78

   45 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 101
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 79

   27 declaration_list: ID .
   28                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 27 (declaration_list)


State 80

   19 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 19 (compound_statement)


State 81

   30 statements: statements statement .

    $default  reduce using rule 30 (statements)


State 82

   35 statement: $@5 compound_statement . $@6

    $default  reduce using rule 34 ($@6)

    $@6  go to state 102


State 83

   64 factor: variable INCOP .

    $default  reduce using rule 64 (factor)


State 84

   65 factor: variable DECOP .

    $default  reduce using rule 65 (factor)


State 85

   47 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 72
    logic_expression   go to state 103
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 86

   43 expression_statement: expression SEMICOLON .

    $default  reduce using rule 43 (expression_statement)


State 87

   49 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 72
    rel_expression     go to state 104
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 88

   53 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable          go to state 72
    term              go to state 105
    unary_expression  go to state 62
    factor            go to state 63


State 89

   51 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 72
    simple_expression  go to state 106
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 90

   55 term: term MULOP . unary_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable          go to state 72
    unary_expression  go to state 107
    factor            go to state 63


State 91

   11 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement $@2 .

    $default  reduce using rule 11 (func_definition)


State 92

   37 statement: IF LPAREN expression . RPAREN statement
   38          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 108


State 93

   36 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    expression_statement  go to state 109
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 94

   39 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 95

   41 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 41 (statement)


State 96

   61 factor: LPAREN expression RPAREN .

    $default  reduce using rule 61 (factor)


State 97

   40 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 111


State 98

   69 arguments: logic_expression .

    $default  reduce using rule 69 (arguments)


State 99

   60 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 112


State 100

   66 argument_list: arguments .
   68 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 113

    $default  reduce using rule 66 (argument_list)


State 101

   45 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 114


State 102

   35 statement: $@5 compound_statement $@6 .

    $default  reduce using rule 35 (statement)


State 103

   47 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 47 (expression)


State 104

   49 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 49 (logic_expression)


State 105

   53 simple_expression: simple_expression ADDOP term .
   55 term: term . MULOP unary_expression

    MULOP  shift, and go to state 90

    $default  reduce using rule 53 (simple_expression)


State 106

   51 rel_expression: simple_expression RELOP simple_expression .
   53 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 88

    $default  reduce using rule 51 (rel_expression)


State 107

   55 term: term MULOP unary_expression .

    $default  reduce using rule 55 (term)


State 108

   37 statement: IF LPAREN expression RPAREN . statement
   38          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statement             go to state 115
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 109

   36 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 56
    expression         go to state 116
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 110

   39 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statement             go to state 117
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 111

   40 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 112

   60 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 60 (factor)


State 113

   68 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    variable           go to state 72
    logic_expression   go to state 119
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 114

   45 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 45 (variable)


State 115

   37 statement: IF LPAREN expression RPAREN statement .
   38          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 37 (statement)


State 116

   36 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 121


State 117

   39 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 39 (statement)


State 118

   40 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 40 (statement)


State 119

   68 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 68 (arguments)


State 120

   38 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statement             go to state 122
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 121

   36 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 37
    FOR          shift, and go to state 38
    WHILE        shift, and go to state 39
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 40
    NOT          shift, and go to state 41
    LPAREN       shift, and go to state 42
    PRINTLN      shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    ADDOP        shift, and go to state 46
    ID           shift, and go to state 47
    CONST_INT    shift, and go to state 48
    CONST_FLOAT  shift, and go to state 49

    $default  reduce using rule 33 ($@5)

    var_declaration       go to state 50
    type_specifier        go to state 51
    statement             go to state 123
    $@5                   go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 122

   38 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 38 (statement)


State 123

   36 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 36 (statement)
